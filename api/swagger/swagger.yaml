swagger: "2.0"
info:
  version: "0.0.1"
  title: 第一个swagger接口示例
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
  - text/plain
paths:
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: 第一个swagger接口
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /login:
    x-swagger-router-controller: login
    get:
      description: 登录
      operationId: login
      parameters:
        - name: userName
          in: query
          description: 用户名
          required: true
          type: string
        - name: password
          in: query
          description: 密码
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/LoginResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
      - name
      - age
    properties:
      message:
        type: string
      name:
        type: string
      age:
        type: number
        
  LoginResponse:
    required:
      - errMsg
      - errCode
      - data
    properties:
      errMsg:
        type: string
      errCode:
        type: string
      data:
        type: object
        properties: 
              userName: 
                type: "string"
                description: "用户名"
              user_id: 
                type: "string"
                description: "用户id"
              token: 
                type: "string"
                description: "用户token"
              verify: 
                type: "string"
                description: "用户名verify"
              user_mobile: 
                type: "string"
                description: "用户手机号"
              photo_url: 
                type: "string"
                description: "用户头像"

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
